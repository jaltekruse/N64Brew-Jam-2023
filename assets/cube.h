// Generated by Arabiki64 V1.2
// By Buu342


// Custom combine mode to allow mixing primitive and vertex colors
#ifndef G_CC_PRIMLITE
    #define G_CC_PRIMLITE SHADE,0,PRIMITIVE,0,0,0,0,PRIMITIVE
#endif


// Generated by Nintendo 64 Texture Converter
// By buu342
// Size = 32x32
// Type = 16-Bit RGBA (G_IM_FMT_RGBA | G_IM_SIZ_16b)

static Gfx N64_Logo_C_dummy_aligner1[] = { gsSPEndDisplayList() };
u16 logo[] = {
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0xF581, 0xF581, 0xF581, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0xF581, 0xF581, 0xF581, 0xF581, 0xF581, 0xF585, 0xDD4B, 0xCD99, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x3481, 0x4CC7, 0x74CB, 0xDD4B, 0xDD4B, 0xDD4B, 0xB5A1, 0x5A23, 0x29A7, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0xA34D, 0x0001, 0x0001, 0x0001, 0x0001, 0x3481, 0x34C1, 0x34C1, 0x3CC3, 0x4CC7, 0x435B, 0x5A23, 0x5A23, 0x10A5, 0x0025, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x2BC9, 0xA34D, 0xA34D, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0xA34D, 0xA34D, 0xA34D, 0xF581, 0xA34D, 0xA34D, 0x2BC9, 0x0001, 0x3481, 0x34C1, 0x34C1, 0x34C1, 0x2BC9, 0x29A7, 0x0029, 0x0027, 0x0027, 0x0025, 0x0001, 0x0001, 0x0001, 0x2BC9, 0xA34D, 0xF581, 0xF581, 0xF581, 0xA34D, 0xA34D, 0x0001, 0x0001, 
    0x0001, 0x2BC9, 0xDD4B, 0xF585, 0xF581, 0xF581, 0xF581, 0xF585, 0xAD8D, 0x4CC7, 0x34C1, 0x34C1, 0x34C1, 0x3481, 0x435B, 0x10A5, 0x0027, 0x0027, 0x0027, 0x0025, 0x0001, 0x0001, 0x2BC9, 0xAD8D, 0xF585, 0xF581, 0xF581, 0xF581, 0xF5CD, 0xDD4B, 0x435B, 0x0001, 
    0x0001, 0x4CC7, 0xAD8D, 0xAD8D, 0xDD4B, 0xDD4B, 0xDD4B, 0xDD4B, 0xE18F, 0xA34D, 0x4CC7, 0x34C1, 0x34C1, 0x4B93, 0x29A7, 0x0027, 0x0027, 0x0027, 0x0027, 0x0025, 0x0001, 0x3481, 0x4CC7, 0x74CB, 0xAD8D, 0xDD4B, 0xDD4B, 0xDD4B, 0xB5A1, 0x8B9B, 0x5A23, 0x0001, 
    0x0001, 0x34C1, 0x4CC7, 0x4CC7, 0x74CB, 0xAD8D, 0xD14D, 0xD14D, 0xD847, 0xD14D, 0x74CB, 0x3CC3, 0x2BC9, 0x435B, 0x5A23, 0x8B9B, 0x8B9B, 0x29A7, 0x0025, 0x29A7, 0x2BC9, 0x34C1, 0x3CC3, 0x3CC3, 0x4CC7, 0x74CB, 0x8B9B, 0x5A23, 0x5A23, 0x29A7, 0x0025, 0x0001, 
    0x0001, 0x34C1, 0x34C1, 0x34C1, 0x3CC3, 0x74CB, 0xD14D, 0xD847, 0xD847, 0xD847, 0xA34D, 0x4CC7, 0x74CB, 0x8B9B, 0xCD99, 0xCD99, 0xCD99, 0xB5A1, 0x8B9B, 0x435B, 0x3CC3, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x4CC7, 0x435B, 0x29A7, 0x0029, 0x0027, 0x0025, 0x0001, 
    0x0001, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x4CC7, 0xA34D, 0xD847, 0xD847, 0xD847, 0xD14D, 0xAD8D, 0xDD4B, 0xDD4B, 0xF585, 0xF585, 0xF585, 0xDD4B, 0xF5D3, 0xB5A1, 0x4B93, 0x3481, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x435B, 0x10A5, 0x0027, 0x0027, 0x0025, 0x0001, 
    0x0001, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x74CB, 0xD14D, 0xD847, 0xD847, 0xD847, 0xA34D, 0xAD8D, 0xDD4B, 0xDD4B, 0xF581, 0xDD4B, 0xCD99, 0x8B9B, 0x8B9B, 0x5A23, 0x4B93, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x435B, 0x10A5, 0x0027, 0x0027, 0x0025, 0x0001, 
    0x0001, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x4CC7, 0xA34D, 0xD14D, 0xD847, 0xD847, 0x74CB, 0x4CC7, 0x74CB, 0x74CB, 0xAD8D, 0x8B9B, 0x8B9B, 0x5A23, 0x29A7, 0x29A7, 0x435B, 0x2BC9, 0x34C1, 0x34C1, 0x34C1, 0x435B, 0x10A5, 0x0027, 0x0027, 0x0025, 0x0001, 
    0x0001, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x4CC7, 0xA34D, 0xD847, 0xD847, 0x74CB, 0x34C1, 0x34C1, 0x3CC3, 0x4CC7, 0x31AB, 0x29A7, 0x0029, 0x0027, 0x0027, 0x29A7, 0x435B, 0x2BC9, 0x34C1, 0x34C1, 0x435B, 0x10A5, 0x0027, 0x0027, 0x0025, 0x0001, 
    0x0001, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x3CC3, 0x74CB, 0xD14D, 0xD847, 0x74CB, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x0025, 0x29A7, 0x4B93, 0x3481, 0x34C1, 0x435B, 0x10A5, 0x0027, 0x0027, 0x0025, 0x0001, 
    0x0001, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x4CC7, 0xA34D, 0xD847, 0x74CB, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x10A5, 0x435B, 0x2BC9, 0x34C1, 0x435B, 0x10A5, 0x0027, 0x0027, 0x0025, 0x0001, 
    0x0001, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x3481, 0x34C1, 0x34C1, 0x3CC3, 0xA34D, 0xD14D, 0x74CB, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x10A5, 0x435B, 0x2BC9, 0x435B, 0x10A5, 0x0027, 0x0027, 0x0025, 0x0001, 
    0x0001, 0x34C1, 0x34C1, 0x34C1, 0x4CC7, 0x4B93, 0x3CC3, 0x34C1, 0x34C1, 0x4CC7, 0xA34D, 0x74CB, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0029, 0x10A5, 0x10A5, 0x0027, 0x0027, 0x29A7, 0x4B93, 0x435B, 0x10A5, 0x0027, 0x0027, 0x0025, 0x0001, 
    0x0001, 0x34C1, 0x34C1, 0x34C1, 0x2BC9, 0x435B, 0x4B93, 0x34C1, 0x34C1, 0x34C1, 0xA34D, 0x74CB, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x29A7, 0x5A23, 0x5A23, 0x0029, 0x0027, 0x10A5, 0x435B, 0x29A7, 0x10A5, 0x0027, 0x0027, 0x0025, 0x0001, 
    0x0001, 0x34C1, 0x34C1, 0x34C1, 0x2BC9, 0x435B, 0x435B, 0x3CC3, 0x34C1, 0x34C1, 0x74CB, 0x4CC7, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x29A7, 0x9959, 0x9959, 0x29A7, 0x0025, 0x0027, 0x10A5, 0x29A7, 0x10A5, 0x0027, 0x0027, 0x0025, 0x0001, 
    0x0001, 0x34C1, 0x34C1, 0x34C1, 0x2BC9, 0x435B, 0x29A7, 0x4B93, 0x3481, 0x34C1, 0x3CC3, 0x3CC3, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x29A7, 0x9959, 0xD14D, 0x9959, 0x10A5, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x0025, 0x0001, 
    0x0001, 0x34C1, 0x34C1, 0x34C1, 0x2BC9, 0x435B, 0x29A7, 0x435B, 0x2BC9, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x29A7, 0x9959, 0xD847, 0x9959, 0x5A23, 0x10A5, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x0025, 0x0001, 
    0x0001, 0x34C1, 0x34C1, 0x34C1, 0x2BC9, 0x435B, 0x0027, 0x29A7, 0x4B93, 0x3CC3, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x29A7, 0x9959, 0xD847, 0xD14D, 0x9959, 0x5A23, 0x10A5, 0x0027, 0x0027, 0x0027, 0x0027, 0x0025, 0x0001, 
    0x0001, 0x34C1, 0x34C1, 0x34C1, 0x2BC9, 0x435B, 0x0027, 0x29A7, 0x435B, 0x4CC7, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x10A5, 0x5A23, 0xD847, 0xD847, 0xD14D, 0x9959, 0x5A23, 0x10A5, 0x0027, 0x0027, 0x0027, 0x0027, 0x0001, 
    0x0001, 0x2BC9, 0x34C1, 0x34C1, 0x2BC9, 0x435B, 0x0027, 0x0027, 0x435B, 0x4B93, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x0025, 0x0001, 0xD847, 0xD847, 0xD14D, 0x9959, 0x29A7, 0x0027, 0x0027, 0x0025, 0x0025, 0x0001, 
    0x0001, 0x0001, 0x2BC9, 0x2BC9, 0x2BC9, 0x435B, 0x0025, 0x0025, 0x10A5, 0x2BC9, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x0025, 0x0001, 0x0001, 0xD847, 0xD847, 0xD14D, 0x5A23, 0x0025, 0x0025, 0x0025, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x2BC9, 0x4B93, 0x0001, 0x0001, 0x0001, 0x0001, 0x3481, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x0025, 0x0001, 0x0001, 0x0001, 0x0001, 0x9959, 0x9959, 0x0025, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x3481, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x0025, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x3481, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x0025, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x3481, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0025, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x34C1, 0x0029, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
};

// Size = 32x32
// Type = 16-Bit RGBA (G_IM_FMT_RGBA | G_IM_SIZ_16b)

static Gfx N64brew_C_dummy_aligner1[] = { gsSPEndDisplayList() };
u16 brew[] = {
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0801, 0x3101, 0x6A81, 0x4181, 0x0801, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x00C1, 0x4285, 0x9487, 0xD509, 0xB455, 0x3993, 0x0845, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x1041, 0x5A01, 0x8B41, 0x8301, 0x3A45, 0x2B8B, 0x5C8F, 0x83DD, 0x6AA5, 0x211B, 0x18C9, 0x72C1, 0x9341, 0x6241, 0x28C1, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x3245, 0x7C07, 0xBCC7, 0xDC05, 0xBB07, 0x540D, 0x0C17, 0x1227, 0x0129, 0x095D, 0x438D, 0x9C87, 0xBC93, 0x8B5B, 0x4191, 0x0003, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x2287, 0x544B, 0x9C8B, 0xDB89, 0xEA87, 0xA38D, 0x8C97, 0xB45D, 0x9BE1, 0x4B59, 0x344D, 0x6CCB, 0x7BDF, 0x62A5, 0x2917, 0x0005, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0287, 0x0C0B, 0x4C4D, 0xAB8B, 0xE9C7, 0xC30B, 0x8CD1, 0xBD15, 0x9BE1, 0x4323, 0x1453, 0x0C8D, 0x02E3, 0x0167, 0x0099, 0x0005, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0287, 0x0C0B, 0x148D, 0x7C0B, 0xCAC9, 0xC309, 0x448F, 0x6C59, 0x5229, 0x1169, 0x0B5F, 0x0C51, 0x02E3, 0x0167, 0x0099, 0x0005, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0287, 0x0C0B, 0x0C8D, 0x4C4F, 0x93CB, 0xBB09, 0x0C8F, 0x0B9B, 0x012B, 0x012B, 0x01E7, 0x0BDB, 0x02E3, 0x0167, 0x0099, 0x0005, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0247, 0x0BCB, 0x1411, 0x1413, 0x5C4D, 0x8BCB, 0x0C8F, 0x0B9B, 0x092B, 0x5127, 0x3929, 0x12A5, 0x0267, 0x0169, 0x0099, 0x0005, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x4AD3, 0x7C9F, 0x84E5, 0x645F, 0x2C4D, 0x3C4D, 0x0C8F, 0x0B9B, 0x192B, 0x8923, 0x7123, 0x3127, 0x0167, 0x0129, 0x0099, 0x0005, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x318D, 0x6319, 0xA529, 0xDEF7, 0xE739, 0xBE2F, 0x6459, 0x0C4D, 0x144F, 0x0B9B, 0x1929, 0x8A21, 0xABA1, 0x8BE7, 0x6367, 0x3A27, 0x4A5D, 0x5295, 0x39CF, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x6B5B, 0xBDEF, 0xEF7B, 0xFFFF, 0xFFFF, 0xEF7B, 0xADAB, 0x6C5B, 0x7CA1, 0x6C23, 0x3A27, 0x94A9, 0xDEF7, 0xE739, 0xCE73, 0x9CE9, 0xAD6D, 0xB5AD, 0x7BDF, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x7BDF, 0xCE73, 0xF7BD, 0xF7BD, 0xFFFF, 0xF7BD, 0xDEF7, 0xDEF7, 0xF7BD, 0xDEF7, 0x8C65, 0xE739, 0xFFFF, 0xFFFF, 0xFFFF, 0xF7BD, 0xF7BD, 0xEF7B, 0x9CE7, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x1085, 0x739D, 0xB5AD, 0xDEF7, 0xEF7B, 0xF7BD, 0xF7BD, 0xF7BD, 0xFFBD, 0xF7BD, 0xE739, 0xDEF7, 0xFFFF, 0xFFFF, 0xF7BD, 0xF7BD, 0xDEF7, 0xA529, 0x6B5B, 0x4211, 0x318D, 0x1085, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x294B, 0xA529, 0xD671, 0xC565, 0xC521, 0xC5A9, 0xC5AB, 0xCDED, 0xCE31, 0xD671, 0xEF7B, 0xFFFF, 0xFFBD, 0xBDEF, 0xC631, 0xC631, 0xC631, 0xCE73, 0xC631, 0xA529, 0x5295, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x4211, 0xBDEF, 0xFF77, 0xFE67, 0xFE1B, 0xFEA1, 0xFD93, 0xF54F, 0xF54F, 0xED4F, 0xBC99, 0xBD67, 0xB4E1, 0xDD5F, 0xF779, 0xE739, 0xC631, 0xAD6B, 0xD6B5, 0xDEF7, 0x9CE7, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x5295, 0xC631, 0xFF77, 0xFE65, 0xFE1B, 0xFEA1, 0xFD8F, 0xFD8D, 0xFD8D, 0xFD4D, 0xF54D, 0xF591, 0xF54F, 0xF5D9, 0xFF79, 0xCE73, 0x7BDF, 0x39CF, 0x8C63, 0xC631, 0xAD6B, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x6319, 0xCE73, 0xFF75, 0xFE61, 0xFE5D, 0xFE5F, 0xFD8F, 0xFD8D, 0xFD8D, 0xFD8D, 0xF54D, 0xED0B, 0xF54D, 0xFD93, 0xFF77, 0xD6B5, 0x7BDF, 0x0001, 0x739D, 0xC631, 0xB5AD, 0x0843, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x739D, 0xD6B5, 0xFF35, 0xFE1F, 0xFE5D, 0xFE5F, 0xFD8D, 0xFD8D, 0xFD8D, 0xF54D, 0xA3D9, 0x7B23, 0xB413, 0xED51, 0xFF35, 0xDEF5, 0x8421, 0x0001, 0x5AD7, 0xBDEF, 0xC631, 0x2109, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x7BDF, 0xD6B5, 0xFF33, 0xFE1D, 0xFE5D, 0xFE5D, 0xFD8D, 0xFD8D, 0xFD8D, 0xF54D, 0x831B, 0x31E7, 0xA393, 0xED4D, 0xFF33, 0xE6F7, 0x8C63, 0x0001, 0x4211, 0xB5AD, 0xCE73, 0x4211, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x8C63, 0xDEF7, 0xFF33, 0xFDD9, 0xFE5F, 0xFE5D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD4D, 0xDCD3, 0xC459, 0xDCCF, 0xF54D, 0xFEF1, 0xEF37, 0x94A5, 0x0001, 0x294B, 0xAD6B, 0xCE73, 0x5AD7, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x94A5, 0xDEF7, 0xFEF1, 0xFDD7, 0xFE5F, 0xFE1B, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD4D, 0xF54D, 0xFD4D, 0xFD8D, 0xFEEF, 0xEF79, 0x9CE7, 0x0843, 0x1085, 0xAD6B, 0xCE73, 0x739D, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x9CE7, 0xE737, 0xFEEF, 0xFDD7, 0xFE5F, 0xFE1B, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFEAD, 0xF779, 0xA529, 0x39CF, 0x6319, 0xBDEF, 0xD6B5, 0x7BDF, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0xA529, 0xEF37, 0xFEED, 0xFDD7, 0xFE5F, 0xFE19, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFEA9, 0xFFB9, 0xD6B5, 0xBDEF, 0xC631, 0xD6B5, 0xC631, 0x6B5B, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0xAD6B, 0xEF37, 0xFEAD, 0xFDD5, 0xFE1B, 0xFDD5, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFE67, 0xFFB9, 0xE739, 0xCE73, 0xC631, 0xB5AD, 0x8421, 0x294B, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0xB5AD, 0xF779, 0xFEAD, 0xFD93, 0xFD91, 0xFD8F, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD93, 0xFEA9, 0xFFBB, 0xC631, 0x6B5B, 0x39CF, 0x18C7, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x18C7, 0xBDEF, 0xF7BB, 0xFF35, 0xFEA9, 0xFE65, 0xFE21, 0xFE1F, 0xFDDD, 0xFDDD, 0xFDDD, 0xFE1F, 0xFE21, 0xFE65, 0xFEAB, 0xFF35, 0xFFBD, 0xBDEF, 0x5AD7, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x18C7, 0xA529, 0xDEF7, 0xEF7B, 0xF77B, 0xF779, 0xF777, 0xFF35, 0xFF33, 0xFF33, 0xFF33, 0xFF35, 0xF777, 0xF779, 0xF77B, 0xEF7B, 0xDEF7, 0xA529, 0x4A53, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x39CF, 0x739D, 0x9CE7, 0xB5AD, 0xCE73, 0xD6B5, 0xDEF7, 0xDEF7, 0xDEF7, 0xDEF7, 0xDEF7, 0xD6B5, 0xC631, 0xB5AD, 0x94A5, 0x5AD7, 0x2109, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x1085, 0x2109, 0x39CF, 0x4211, 0x39CF, 0x294B, 0x1085, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
    0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 
};


/*********************************
              Models
*********************************/

static Vtx vtx_cube[] = {
    {-50, -50, 0, 0, 1024, 1024, -73, -73, -73, 255}, /* 0 */
    {-50, -50, 100, 0, 1024, 0, -73, -73, 73, 255}, /* 1 */
    {-50, 50, 100, 0, 0, 0, -73, 73, 73, 255}, /* 2 */
    {-50, 50, 0, 0, 0, 1024, -73, 73, -73, 255}, /* 3 */
    {-50, 50, 0, 0, 1024, 1024, -73, 73, -73, 255}, /* 4 */
    {-50, 50, 100, 0, 1024, 0, -73, 73, 73, 255}, /* 5 */
    {50, 50, 100, 0, 0, 0, 73, 73, 73, 255}, /* 6 */
    {50, 50, 0, 0, 0, 1024, 73, 73, -73, 255}, /* 7 */
    {50, 50, 0, 0, 1024, 1024, 73, 73, -73, 255}, /* 8 */
    {50, 50, 100, 0, 1024, 0, 73, 73, 73, 255}, /* 9 */
    {50, -50, 100, 0, 0, 0, 73, -73, 73, 255}, /* 10 */
    {50, -50, 0, 0, 0, 1024, 73, -73, -73, 255}, /* 11 */
    {50, -50, 0, 0, 1024, 1024, 73, -73, -73, 255}, /* 12 */
    {50, -50, 100, 0, 1024, 0, 73, -73, 73, 255}, /* 13 */
    {-50, -50, 100, 0, 0, 0, -73, -73, 73, 255}, /* 14 */
    {-50, -50, 0, 0, 0, 1024, -73, -73, -73, 255}, /* 15 */
    {-50, 50, 0, 0, 0, 1024, -73, 73, -73, 255}, /* 16 */
    {50, 50, 0, 0, 1024, 1024, 73, 73, -73, 255}, /* 17 */
    {50, -50, 0, 0, 1024, 0, 73, -73, -73, 255}, /* 18 */
    {-50, -50, 0, 0, 0, 0, -73, -73, -73, 255}, /* 19 */
    {50, 50, 100, 0, 0, 1024, 73, 73, 73, 255}, /* 20 */
    {-50, 50, 100, 0, 1024, 1024, -73, 73, 73, 255}, /* 21 */
};

static Gfx gfx_cube[] = {
    gsSPVertex(vtx_cube+0, 22, 0),
    gsDPSetCycleType(G_CYC_1CYCLE),
    gsDPSetRenderMode(G_RM_AA_ZB_OPA_SURF, G_RM_AA_ZB_OPA_SURF2),
    gsDPSetCombineMode(G_CC_MODULATEIDECALA, G_CC_MODULATEIDECALA),
    gsDPSetTextureFilter(G_TF_BILERP),
    gsSPClearGeometryMode(0xFFFFFFFF),
    gsSPSetGeometryMode(G_SHADE | G_ZBUFFER | G_CULL_BACK | G_SHADING_SMOOTH | G_LIGHTING),
    gsDPLoadTextureBlock(brew, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0, G_TX_MIRROR, G_TX_MIRROR, 5, 5, G_TX_NOLOD, G_TX_NOLOD),
    gsDPPipeSync(),
    gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
    gsSP2Triangles(4, 5, 6, 0, 4, 6, 7, 0),
    gsSP2Triangles(8, 9, 10, 0, 8, 10, 11, 0),
    gsSP2Triangles(12, 13, 14, 0, 12, 14, 15, 0),
    gsDPLoadTextureBlock(logo, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0, G_TX_MIRROR, G_TX_MIRROR, 5, 5, G_TX_NOLOD, G_TX_NOLOD),
    gsDPPipeSync(),
    gsSP2Triangles(16, 17, 18, 0, 16, 18, 19, 0),
    gsSP2Triangles(20, 21, 1, 0, 20, 1, 10, 0),
    gsSPEndDisplayList(),
};

